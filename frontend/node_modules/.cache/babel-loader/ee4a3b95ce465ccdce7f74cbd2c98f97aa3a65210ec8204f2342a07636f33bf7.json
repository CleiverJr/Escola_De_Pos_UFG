{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jrcle\\\\OneDrive\\\\Desktop\\\\Projetos\\\\Escola de P\\xF3s\\\\chatbot\\\\src\\\\components\\\\ChatbotWindow.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport FloatingButton from './FloatingButton'; // Importando o botão flutuante\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatbotContainer = styled.div`\n  position: fixed;\n  bottom: 80px;\n  right: 20px;\n  width: 350px;\n  height: 500px;\n  background: #fff;\n  border-radius: 10px;\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);\n  display: ${({\n  isVisible\n}) => isVisible ? 'block' : 'none'};\n  overflow: hidden;\n`;\n_c = ChatbotContainer;\nconst ChatbotHeader = styled.div`\n  background: #007bff;\n  color: white;\n  padding: 10px;\n  text-align: center;\n  font-weight: bold;\n`;\n_c2 = ChatbotHeader;\nconst ChatbotMessages = styled.div`\n  padding: 10px;\n  height: 380px;\n  overflow-y: auto;\n  background-color: #f9f9f9;\n`;\n_c3 = ChatbotMessages;\nconst ChatbotInputContainer = styled.div`\n  display: flex;\n  padding: 10px;\n  border-top: 1px solid #ccc;\n`;\n_c4 = ChatbotInputContainer;\nconst ChatbotInput = styled.input`\n  flex: 1;\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  margin-right: 10px;\n`;\n_c5 = ChatbotInput;\nconst ChatbotButton = styled.button`\n  padding: 10px 20px;\n  border: none;\n  border-radius: 5px;\n  background-color: #007bff;\n  color: white;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #0056b3;\n  }\n`;\n_c6 = ChatbotButton;\nconst ChatbotWindow = () => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [userMessage, setUserMessage] = useState('');\n  const toggleChatbot = () => {\n    setIsOpen(!isOpen);\n  };\n  const sendMessage = async () => {\n    if (!userMessage.trim()) return;\n    setMessages([...messages, {\n      sender: 'user',\n      text: userMessage\n    }]);\n    try {\n      const response = await axios.post('URL_DA_SUA_API', {\n        message: userMessage\n      });\n      setMessages(prev => [...prev, {\n        sender: 'bot',\n        text: response.data.reply\n      }]);\n    } catch (error) {\n      setMessages(prev => [...prev, {\n        sender: 'bot',\n        text: 'Erro ao obter resposta. Tente novamente.'\n      }]);\n    }\n    setUserMessage('');\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(FloatingButton, {\n      onClick: toggleChatbot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatbotContainer, {\n      isVisible: isOpen,\n      children: [/*#__PURE__*/_jsxDEV(ChatbotHeader, {\n        children: \"Chatbot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatbotMessages, {\n        children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: message.sender === 'user' ? 'right' : 'left',\n            marginBottom: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [message.sender === 'user' ? 'Você' : 'Bot', \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this), ' ', message.text]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatbotInputContainer, {\n        children: [/*#__PURE__*/_jsxDEV(ChatbotInput, {\n          type: \"text\",\n          value: userMessage,\n          onChange: e => setUserMessage(e.target.value),\n          placeholder: \"Digite sua mensagem...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ChatbotButton, {\n          onClick: sendMessage,\n          children: \"Enviar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(ChatbotWindow, \"f1W9j0leufkWKFMcivVSnC8c0WY=\");\n_c7 = ChatbotWindow;\nexport default ChatbotWindow;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"ChatbotContainer\");\n$RefreshReg$(_c2, \"ChatbotHeader\");\n$RefreshReg$(_c3, \"ChatbotMessages\");\n$RefreshReg$(_c4, \"ChatbotInputContainer\");\n$RefreshReg$(_c5, \"ChatbotInput\");\n$RefreshReg$(_c6, \"ChatbotButton\");\n$RefreshReg$(_c7, \"ChatbotWindow\");","map":{"version":3,"names":["React","useState","styled","axios","FloatingButton","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatbotContainer","div","isVisible","_c","ChatbotHeader","_c2","ChatbotMessages","_c3","ChatbotInputContainer","_c4","ChatbotInput","input","_c5","ChatbotButton","button","_c6","ChatbotWindow","_s","isOpen","setIsOpen","messages","setMessages","userMessage","setUserMessage","toggleChatbot","sendMessage","trim","sender","text","response","post","message","prev","data","reply","error","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","index","style","textAlign","marginBottom","type","value","onChange","e","target","placeholder","_c7","$RefreshReg$"],"sources":["C:/Users/jrcle/OneDrive/Desktop/Projetos/Escola de Pós/chatbot/src/components/ChatbotWindow.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\nimport FloatingButton from './FloatingButton'; // Importando o botão flutuante\r\n\r\nconst ChatbotContainer = styled.div`\r\n  position: fixed;\r\n  bottom: 80px;\r\n  right: 20px;\r\n  width: 350px;\r\n  height: 500px;\r\n  background: #fff;\r\n  border-radius: 10px;\r\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);\r\n  display: ${({ isVisible }) => (isVisible ? 'block' : 'none')};\r\n  overflow: hidden;\r\n`;\r\n\r\nconst ChatbotHeader = styled.div`\r\n  background: #007bff;\r\n  color: white;\r\n  padding: 10px;\r\n  text-align: center;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst ChatbotMessages = styled.div`\r\n  padding: 10px;\r\n  height: 380px;\r\n  overflow-y: auto;\r\n  background-color: #f9f9f9;\r\n`;\r\n\r\nconst ChatbotInputContainer = styled.div`\r\n  display: flex;\r\n  padding: 10px;\r\n  border-top: 1px solid #ccc;\r\n`;\r\n\r\nconst ChatbotInput = styled.input`\r\n  flex: 1;\r\n  padding: 10px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst ChatbotButton = styled.button`\r\n  padding: 10px 20px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  background-color: #007bff;\r\n  color: white;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: #0056b3;\r\n  }\r\n`;\r\n\r\nconst ChatbotWindow = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [messages, setMessages] = useState([]);\r\n  const [userMessage, setUserMessage] = useState('');\r\n\r\n  const toggleChatbot = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  const sendMessage = async () => {\r\n    if (!userMessage.trim()) return;\r\n\r\n    setMessages([...messages, { sender: 'user', text: userMessage }]);\r\n\r\n    try {\r\n      const response = await axios.post('URL_DA_SUA_API', {\r\n        message: userMessage,\r\n      });\r\n\r\n      setMessages((prev) => [\r\n        ...prev,\r\n        { sender: 'bot', text: response.data.reply },\r\n      ]);\r\n    } catch (error) {\r\n      setMessages((prev) => [\r\n        ...prev,\r\n        { sender: 'bot', text: 'Erro ao obter resposta. Tente novamente.' },\r\n      ]);\r\n    }\r\n\r\n    setUserMessage('');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Botão flutuante importado */}\r\n      <FloatingButton onClick={toggleChatbot} />\r\n\r\n      <ChatbotContainer isVisible={isOpen}>\r\n        <ChatbotHeader>Chatbot</ChatbotHeader>\r\n        <ChatbotMessages>\r\n          {messages.map((message, index) => (\r\n            <div\r\n              key={index}\r\n              style={{\r\n                textAlign: message.sender === 'user' ? 'right' : 'left',\r\n                marginBottom: '10px',\r\n              }}\r\n            >\r\n              <strong>{message.sender === 'user' ? 'Você' : 'Bot'}:</strong>{' '}\r\n              {message.text}\r\n            </div>\r\n          ))}\r\n        </ChatbotMessages>\r\n        <ChatbotInputContainer>\r\n          <ChatbotInput\r\n            type=\"text\"\r\n            value={userMessage}\r\n            onChange={(e) => setUserMessage(e.target.value)}\r\n            placeholder=\"Digite sua mensagem...\"\r\n          />\r\n          <ChatbotButton onClick={sendMessage}>Enviar</ChatbotButton>\r\n        </ChatbotInputContainer>\r\n      </ChatbotContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChatbotWindow;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}