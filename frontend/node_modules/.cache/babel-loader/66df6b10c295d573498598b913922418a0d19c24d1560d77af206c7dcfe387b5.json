{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jrcle\\\\OneDrive\\\\Desktop\\\\Projetos\\\\Escola de P\\xF3s\\\\chatbot\\\\src\\\\components\\\\ChatbotWindow.jsx\",\n  _s = $RefreshSig$();\n// ChatbotWindow.jsx\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport FloatingButton from './FloatingButton';\nimport './ChatbotWindow.css'; // Importando o arquivo CSS\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatbotWindow = () => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [userMessage, setUserMessage] = useState('');\n  const toggleChatbot = () => {\n    setIsOpen(!isOpen);\n  };\n  const sendMessage = async () => {\n    if (!userMessage.trim()) return;\n    setMessages([...messages, {\n      sender: 'user',\n      text: userMessage\n    }]);\n    try {\n      const response = await axios.post('AIzaSyDlDxmAL3i7CluPgZ8cbgz3xi9o8Hd76jk', {\n        message: userMessage\n      }, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'AIzaSyDlDxmAL3i7CluPgZ8cbgz3xi9o8Hd76jk'\n        }\n      });\n      setMessages(prev => [...prev, {\n        sender: 'bot',\n        text: response.data.reply\n      }]);\n    } catch (error) {\n      console.error('Erro ao chamar a API:', error);\n      setMessages(prev => [...prev, {\n        sender: 'bot',\n        text: 'Erro ao obter resposta. Tente novamente.'\n      }]);\n    }\n    setUserMessage('');\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(FloatingButton, {\n      onClick: toggleChatbot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `chatbot-container ${isOpen ? 'visible' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-header\",\n        children: \"Chatbot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-messages\",\n        children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: message.sender === 'user' ? 'right' : 'left',\n            marginBottom: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [message.sender === 'user' ? 'Você' : 'Bot', \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this), ' ', message.text]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"chatbot-input\",\n          type: \"text\",\n          value: userMessage,\n          onChange: e => setUserMessage(e.target.value),\n          placeholder: \"Digite sua mensagem...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"chatbot-button\",\n          onClick: sendMessage,\n          formMethod: \"POST\",\n          formAction: sendMessage,\n          children: \"Enviar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(ChatbotWindow, \"f1W9j0leufkWKFMcivVSnC8c0WY=\");\n_c = ChatbotWindow;\nexport default ChatbotWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatbotWindow\");","map":{"version":3,"names":["React","useState","axios","FloatingButton","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatbotWindow","_s","isOpen","setIsOpen","messages","setMessages","userMessage","setUserMessage","toggleChatbot","sendMessage","trim","sender","text","response","post","message","headers","prev","data","reply","error","console","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","className","map","index","style","textAlign","marginBottom","type","value","onChange","e","target","placeholder","formMethod","formAction","_c","$RefreshReg$"],"sources":["C:/Users/jrcle/OneDrive/Desktop/Projetos/Escola de Pós/chatbot/src/components/ChatbotWindow.jsx"],"sourcesContent":["// ChatbotWindow.jsx\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport FloatingButton from './FloatingButton'; \r\nimport './ChatbotWindow.css'; // Importando o arquivo CSS\r\n\r\nconst ChatbotWindow = () => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [messages, setMessages] = useState([]);\r\n    const [userMessage, setUserMessage] = useState('');\r\n\r\n    const toggleChatbot = () => {\r\n        setIsOpen(!isOpen);\r\n    };\r\n\r\n    const sendMessage = async () => {\r\n        if (!userMessage.trim()) return;\r\n\r\n        setMessages([...messages, { sender: 'user', text: userMessage }]);\r\n\r\n        try {\r\n            const response = await axios.post('AIzaSyDlDxmAL3i7CluPgZ8cbgz3xi9o8Hd76jk', {\r\n                message: userMessage,\r\n            }, {\r\n                headers: {\r\n                    'Content-Type': 'application/json', \r\n                    'Authorization': 'AIzaSyDlDxmAL3i7CluPgZ8cbgz3xi9o8Hd76jk', \r\n                },\r\n            });\r\n\r\n            \r\n            setMessages((prev) => [\r\n                ...prev,\r\n                { sender: 'bot', text: response.data.reply }, \r\n            ]);\r\n        } catch (error) {\r\n            console.error('Erro ao chamar a API:', error); \r\n            setMessages((prev) => [\r\n                ...prev,\r\n                { sender: 'bot', text: 'Erro ao obter resposta. Tente novamente.' },\r\n            ]);\r\n        }\r\n\r\n        setUserMessage('');\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <FloatingButton onClick={toggleChatbot} />\r\n\r\n            <div className={`chatbot-container ${isOpen ? 'visible' : ''}`}>\r\n                <div className=\"chatbot-header\">Chatbot</div>\r\n                <div className=\"chatbot-messages\">\r\n                    {messages.map((message, index) => (\r\n                        <div\r\n                            key={index}\r\n                            style={{\r\n                                textAlign: message.sender === 'user' ? 'right' : 'left',\r\n                                marginBottom: '10px',\r\n                            }}\r\n                        >\r\n                            <strong>{message.sender === 'user' ? 'Você' : 'Bot'}:</strong>{' '}\r\n                            {message.text}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <div className=\"chatbot-input-container\">\r\n                    <input\r\n                        className=\"chatbot-input\"\r\n                        type=\"text\"\r\n                        value={userMessage}\r\n                        onChange={(e) => setUserMessage(e.target.value)}\r\n                        placeholder=\"Digite sua mensagem...\"\r\n                    />\r\n                    <button className=\"chatbot-button\" onClick={sendMessage} formMethod='POST' formAction={sendMessage}>\r\n                        Enviar\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ChatbotWindow;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}