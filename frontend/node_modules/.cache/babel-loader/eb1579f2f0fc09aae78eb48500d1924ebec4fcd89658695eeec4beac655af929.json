{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jrcle\\\\OneDrive\\\\Desktop\\\\Projetos\\\\Escola de P\\xF3s\\\\chatbot\\\\src\\\\components\\\\ChatbotWindow.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\n\n// Estilos para o chatbot\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatbotContainer = styled.div`\n  position: fixed;\n  bottom: 80px;\n  right: 20px;\n  width: 350px;\n  height: 500px;\n  background: #fff;\n  border-radius: 10px;\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);\n  display: ${({\n  isVisible\n}) => isVisible ? 'block' : 'none'};\n  overflow: hidden;\n`;\n_c = ChatbotContainer;\nconst ChatbotHeader = styled.div`\n  background: #4a90e2;\n  color: #fff;\n  padding: 10px;\n  font-size: 16px;\n  text-align: center;\n  border-top-left-radius: 10px;\n  border-top-right-radius: 10px;\n`;\n_c2 = ChatbotHeader;\nconst ChatbotMessages = styled.div`\n  flex: 1;\n  padding: 10px;\n  overflow-y: auto;\n  max-height: 380px;\n  background: #f9f9f9;\n`;\n_c3 = ChatbotMessages;\nconst ChatbotInputContainer = styled.div`\n  display: flex;\n  padding: 10px;\n  border-top: 1px solid #ddd;\n`;\n_c4 = ChatbotInputContainer;\nconst ChatbotInput = styled.input`\n  flex: 1;\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n  margin-right: 10px;\n`;\n_c5 = ChatbotInput;\nconst ChatbotButton = styled.button`\n  background: #4a90e2;\n  color: #fff;\n  padding: 10px 15px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n\n  &:hover {\n    background: #357abd;\n  }\n`;\n_c6 = ChatbotButton;\nconst ChatbotToggleButton = styled.button`\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  background: #4a90e2;\n  color: #fff;\n  padding: 15px;\n  border: none;\n  border-radius: 50%;\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);\n  font-size: 20px;\n  cursor: pointer;\n\n  &:hover {\n    background: #357abd;\n  }\n`;\n_c7 = ChatbotToggleButton;\nconst ChatbotWindow = () => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [userMessage, setUserMessage] = useState('');\n\n  // Fun칞칚o para alternar a janela do chatbot\n  const toggleChatbot = () => {\n    setIsOpen(!isOpen);\n  };\n\n  // Fun칞칚o para enviar a mensagem do usu치rio para a API\n  const sendMessage = async () => {\n    if (!userMessage.trim()) return;\n\n    // Atualiza mensagens com a do usu치rio\n    setMessages([...messages, {\n      sender: 'user',\n      text: userMessage\n    }]);\n    try {\n      const response = await axios.post('AIzaSyDlDxmAL3i7CluPgZ8cbgz3xi9o8Hd76jk', {\n        message: userMessage\n      });\n\n      // Atualiza mensagens com a resposta da API\n      setMessages(prev => [...prev, {\n        sender: 'bot',\n        text: response.data.reply\n      }]);\n    } catch (error) {\n      setMessages(prev => [...prev, {\n        sender: 'bot',\n        text: 'Erro ao obter resposta. Tente novamente.'\n      }]);\n    }\n    setUserMessage('');\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ChatbotToggleButton, {\n      onClick: toggleChatbot,\n      children: \"\\uD83D\\uDCAC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ChatbotContainer, {\n      isVisible: isOpen,\n      children: [/*#__PURE__*/_jsxDEV(ChatbotHeader, {\n        children: \"Chatbot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ChatbotMessages, {\n        children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: message.sender === 'user' ? 'right' : 'left',\n            marginBottom: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [message.sender === 'user' ? 'Voc칡' : 'Bot', \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 29\n          }, this), ' ', message.text]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ChatbotInputContainer, {\n        children: [/*#__PURE__*/_jsxDEV(ChatbotInput, {\n          type: \"text\",\n          value: userMessage,\n          onChange: e => setUserMessage(e.target.value),\n          placeholder: \"Digite sua mensagem...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ChatbotButton, {\n          onClick: sendMessage,\n          children: \"Enviar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(ChatbotWindow, \"f1W9j0leufkWKFMcivVSnC8c0WY=\");\n_c8 = ChatbotWindow;\nexport default ChatbotWindow;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n$RefreshReg$(_c, \"ChatbotContainer\");\n$RefreshReg$(_c2, \"ChatbotHeader\");\n$RefreshReg$(_c3, \"ChatbotMessages\");\n$RefreshReg$(_c4, \"ChatbotInputContainer\");\n$RefreshReg$(_c5, \"ChatbotInput\");\n$RefreshReg$(_c6, \"ChatbotButton\");\n$RefreshReg$(_c7, \"ChatbotToggleButton\");\n$RefreshReg$(_c8, \"ChatbotWindow\");","map":{"version":3,"names":["React","useState","useEffect","styled","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatbotContainer","div","isVisible","_c","ChatbotHeader","_c2","ChatbotMessages","_c3","ChatbotInputContainer","_c4","ChatbotInput","input","_c5","ChatbotButton","button","_c6","ChatbotToggleButton","_c7","ChatbotWindow","_s","isOpen","setIsOpen","messages","setMessages","userMessage","setUserMessage","toggleChatbot","sendMessage","trim","sender","text","response","post","message","prev","data","reply","error","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","index","style","textAlign","marginBottom","type","value","onChange","e","target","placeholder","_c8","$RefreshReg$"],"sources":["C:/Users/jrcle/OneDrive/Desktop/Projetos/Escola de P칩s/chatbot/src/components/ChatbotWindow.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\n\r\n// Estilos para o chatbot\r\nconst ChatbotContainer = styled.div`\r\n  position: fixed;\r\n  bottom: 80px;\r\n  right: 20px;\r\n  width: 350px;\r\n  height: 500px;\r\n  background: #fff;\r\n  border-radius: 10px;\r\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);\r\n  display: ${({ isVisible }) => (isVisible ? 'block' : 'none')};\r\n  overflow: hidden;\r\n`;\r\n\r\nconst ChatbotHeader = styled.div`\r\n  background: #4a90e2;\r\n  color: #fff;\r\n  padding: 10px;\r\n  font-size: 16px;\r\n  text-align: center;\r\n  border-top-left-radius: 10px;\r\n  border-top-right-radius: 10px;\r\n`;\r\n\r\nconst ChatbotMessages = styled.div`\r\n  flex: 1;\r\n  padding: 10px;\r\n  overflow-y: auto;\r\n  max-height: 380px;\r\n  background: #f9f9f9;\r\n`;\r\n\r\nconst ChatbotInputContainer = styled.div`\r\n  display: flex;\r\n  padding: 10px;\r\n  border-top: 1px solid #ddd;\r\n`;\r\n\r\nconst ChatbotInput = styled.input`\r\n  flex: 1;\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst ChatbotButton = styled.button`\r\n  background: #4a90e2;\r\n  color: #fff;\r\n  padding: 10px 15px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background: #357abd;\r\n  }\r\n`;\r\n\r\nconst ChatbotToggleButton = styled.button`\r\n  position: fixed;\r\n  bottom: 20px;\r\n  right: 20px;\r\n  background: #4a90e2;\r\n  color: #fff;\r\n  padding: 15px;\r\n  border: none;\r\n  border-radius: 50%;\r\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);\r\n  font-size: 20px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background: #357abd;\r\n  }\r\n`;\r\n\r\nconst ChatbotWindow = () => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [messages, setMessages] = useState([]);\r\n    const [userMessage, setUserMessage] = useState('');\r\n\r\n    // Fun칞칚o para alternar a janela do chatbot\r\n    const toggleChatbot = () => {\r\n        setIsOpen(!isOpen);\r\n    };\r\n\r\n    // Fun칞칚o para enviar a mensagem do usu치rio para a API\r\n    const sendMessage = async () => {\r\n        if (!userMessage.trim()) return;\r\n\r\n        // Atualiza mensagens com a do usu치rio\r\n        setMessages([...messages, { sender: 'user', text: userMessage }]);\r\n\r\n        try {\r\n            const response = await axios.post('AIzaSyDlDxmAL3i7CluPgZ8cbgz3xi9o8Hd76jk', {\r\n                message: userMessage,\r\n            });\r\n\r\n            // Atualiza mensagens com a resposta da API\r\n            setMessages((prev) => [\r\n                ...prev,\r\n                { sender: 'bot', text: response.data.reply },\r\n            ]);\r\n        } catch (error) {\r\n            setMessages((prev) => [\r\n                ...prev,\r\n                { sender: 'bot', text: 'Erro ao obter resposta. Tente novamente.' },\r\n            ]);\r\n        }\r\n\r\n        setUserMessage('');\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <ChatbotToggleButton onClick={toggleChatbot}>\r\n                游눫\r\n            </ChatbotToggleButton>\r\n\r\n            <ChatbotContainer isVisible={isOpen}>\r\n                <ChatbotHeader>Chatbot</ChatbotHeader>\r\n                <ChatbotMessages>\r\n                    {messages.map((message, index) => (\r\n                        <div\r\n                            key={index}\r\n                            style={{\r\n                                textAlign: message.sender === 'user' ? 'right' : 'left',\r\n                                marginBottom: '10px',\r\n                            }}\r\n                        >\r\n                            <strong>{message.sender === 'user' ? 'Voc칡' : 'Bot'}:</strong>{' '}\r\n                            {message.text}\r\n                        </div>\r\n                    ))}\r\n                </ChatbotMessages>\r\n                <ChatbotInputContainer>\r\n                    <ChatbotInput\r\n                        type=\"text\"\r\n                        value={userMessage}\r\n                        onChange={(e) => setUserMessage(e.target.value)}\r\n                        placeholder=\"Digite sua mensagem...\"\r\n                    />\r\n                    <ChatbotButton onClick={sendMessage}>Enviar</ChatbotButton>\r\n                </ChatbotInputContainer>\r\n            </ChatbotContainer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ChatbotWindow;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}